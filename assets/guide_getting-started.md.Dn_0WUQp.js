import{_ as a,c as e,o as t,a5 as n,a6 as s}from"./chunks/framework.CXwJbHuV.js";const b=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started.md","filePath":"guide/getting-started.md"}'),i={name:"guide/getting-started.md"},l=n('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><p>Welcome to the installation and usage for Logseq Terminal. This is a simple guide to help you quickly understand and start using it.</p><h2 id="what-is-it" tabindex="-1">What is it <a class="header-anchor" href="#what-is-it" aria-label="Permalink to &quot;What is it&quot;">​</a></h2><p>Logseq Terminal is a terminal simulator for Logseq. It can be used to perform various operations in terminal, e.g. cat, ls, cd, tree, pwd and so on. These commands are similar with the real terminal commands in Linux but not the same. You can use help and <code>command --help</code> to learn more about the commands.</p><p><img src="'+s+`" alt=""></p><p>It would be getting more commands in the future.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Support cd, ls, cat, pwd, tree, clear... commands</li><li>Support command history and nagivate by up/down arrow key, or ctrl+p/ctrl+n</li><li>Support command tab auto completion</li><li>Support namespace autocompletion for cd, cat, ls and so on.</li><li>Support line cursor and nagivate by left/right arrow key</li><li>Support Emoji, CJK</li><li>Support some common shortcuts. e.g. ctrl+a/ctrl+e, ctrl+d/ctrl+h, ctrl+f/ctrl+b, ctrl+k/ctrl+u, ctrl+l and so on.</li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><h3 id="plugin-marketplace" tabindex="-1">Plugin Marketplace <a class="header-anchor" href="#plugin-marketplace" aria-label="Permalink to &quot;Plugin Marketplace&quot;">​</a></h3><p>Search for it in the plugin marketplace and install it from there.</p><h3 id="manual-installation" tabindex="-1">Manual Installation <a class="header-anchor" href="#manual-installation" aria-label="Permalink to &quot;Manual Installation&quot;">​</a></h3><ol><li>Download the latest zip file from the release page.</li><li>Unzip the zip file into the folder where you want to store the plugin.</li><li>Enable developer mode in Logseq.</li><li>Load the unzipped folder by clicking the &quot;Load unpacked plugin&quot; button on the plugin modal.</li><li>You should now see that the plugin has been installed.</li></ol><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><p>There is an icon on Logseq top right corner to trigger the terminal UI. By default there is no shortcuts, but you can set a shortcut in the Logseq shortcut settings.</p><p>The first command you need to run may be the help command. After you run the help command, you can see all supported comands.</p><p>Then, you can check the terminal plugin settings. You can set font size or theme there.</p><h2 id="shortcuts" tabindex="-1">Shortcuts <a class="header-anchor" href="#shortcuts" aria-label="Permalink to &quot;Shortcuts&quot;">​</a></h2><table><thead><tr><th>Shortcut</th><th>Description</th></tr></thead><tbody><tr><td>ctrl+a</td><td>Put cursor to the beginning of the line</td></tr><tr><td>ctrl+e</td><td>Put cursor to the end of the line</td></tr><tr><td>ctrl+d</td><td>Delete the character under the cursor</td></tr><tr><td>ctrl+h, backspace</td><td>Delete the character before the cursor</td></tr><tr><td>ctrl+f</td><td>Move cursor forward one character</td></tr><tr><td>ctrl+b</td><td>Move cursor backward one character</td></tr><tr><td>ctrl+k</td><td>Delete all characters after the cursor</td></tr><tr><td>ctrl+u</td><td>Delete all characters in current line</td></tr><tr><td>ctrl+l</td><td>Clear the terminal screen</td></tr><tr><td>ctrl+p, up arrow</td><td>Navigate to the previous command in history</td></tr><tr><td>ctrl+n, down arrow</td><td>Navigate to the next command in history</td></tr><tr><td>left arrow</td><td>Move cursor backward one character</td></tr><tr><td>right arrow</td><td>Move cursor forward one character</td></tr></tbody></table><h2 id="commands" tabindex="-1">Commands <a class="header-anchor" href="#commands" aria-label="Permalink to &quot;Commands&quot;">​</a></h2><h3 id="help" tabindex="-1">help <a class="header-anchor" href="#help" aria-label="Permalink to &quot;help&quot;">​</a></h3><p>Show help message. It will print all commands and their descriptions.</p><h3 id="cat" tabindex="-1">cat <a class="header-anchor" href="#cat" aria-label="Permalink to &quot;cat&quot;">​</a></h3><p>Print page or journal content.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ cat -h</span></span>
<span class="line"><span>Show page or journal content. Usage: cat [PAGE_NAME|JOURNAL_DATE] [options].</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  -h, --help   Displays help</span></span>
<span class="line"><span>  -i, --info   Show page or journal info in JSON format</span></span>
<span class="line"><span>  -c, --count  Count lines and chars</span></span>
<span class="line"><span>  -u, --uuid   Show page or journal content with block uuid</span></span>
<span class="line"><span>  -o, --only   Only first level block, without children</span></span></code></pre></div><h3 id="block" tabindex="-1">block <a class="header-anchor" href="#block" aria-label="Permalink to &quot;block&quot;">​</a></h3><p>Show block content.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ block -h</span></span>
<span class="line"><span>Show block content. Usage: block BLOCK_UUID [options].</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  -h, --help   Displays help</span></span>
<span class="line"><span>  -i, --info   Show block info in JSON format</span></span>
<span class="line"><span>  -c, --count  Count lines and chars</span></span>
<span class="line"><span>  -o, --only   Only current block, without children</span></span></code></pre></div><h3 id="cd" tabindex="-1">cd <a class="header-anchor" href="#cd" aria-label="Permalink to &quot;cd&quot;">​</a></h3><p>Change the current working directory. It is simulated by Logseq namespace.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ cd -h</span></span>
<span class="line"><span>Switch to page or journal and change pwd. Usage: cd PAGE_NAME|JOURNAL_DATE [options].</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  -h, --help  Displays help</span></span></code></pre></div><h3 id="ls" tabindex="-1">ls <a class="header-anchor" href="#ls" aria-label="Permalink to &quot;ls&quot;">​</a></h3><p>List pages under current namespace prefix. Support some filters.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ ls -h</span></span>
<span class="line"><span>List pages under current namespace prefix. Usage: ls [NAMESPACE_PREFIX] [options].</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  -h, --help        Displays help</span></span>
<span class="line"><span>  --limit Int       Number of pages limitation.</span></span>
<span class="line"><span>  --prefix String   Filter pages starts with prefix.</span></span>
<span class="line"><span>  --suffix String   Filter pages ends with suffix.</span></span>
<span class="line"><span>  --contain String  Filter pages contains string.</span></span>
<span class="line"><span>  --regexp String   Filter pages by regexp.</span></span>
<span class="line"><span>  --glob String     Filter pages by glob.</span></span></code></pre></div><h3 id="pwd" tabindex="-1">pwd <a class="header-anchor" href="#pwd" aria-label="Permalink to &quot;pwd&quot;">​</a></h3><p>Show current namespace prefix and graph.</p><h3 id="tree" tabindex="-1">tree <a class="header-anchor" href="#tree" aria-label="Permalink to &quot;tree&quot;">​</a></h3><p>Print namespace prefix and it&#39;s children in a tree-like format.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ tree -h</span></span>
<span class="line"><span>Show namespace prefix in a tree-like format. Usage: tree [NAMESPACE_PREFIX] [options].</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  -h, --help  Displays help</span></span></code></pre></div><h3 id="clear" tabindex="-1">clear <a class="header-anchor" href="#clear" aria-label="Permalink to &quot;clear&quot;">​</a></h3><p>Clear the terminal screen.</p><h3 id="license" tabindex="-1">license <a class="header-anchor" href="#license" aria-label="Permalink to &quot;license&quot;">​</a></h3><p>Show license status.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Show license state. Usage: license [options].</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  -h, --help      Displays help</span></span>
<span class="line"><span>  -a, --activate  Activate license</span></span></code></pre></div><h3 id="settings" tabindex="-1">settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;settings&quot;">​</a></h3><p>Close the terminal window and open plugin settings modal.</p><h3 id="history" tabindex="-1">history <a class="header-anchor" href="#history" aria-label="Permalink to &quot;history&quot;">​</a></h3><p>Show command history.</p><h3 id="quit-exit-bye" tabindex="-1">quit, exit, bye <a class="header-anchor" href="#quit-exit-bye" aria-label="Permalink to &quot;quit, exit, bye&quot;">​</a></h3><p>Close the terminal window.</p>`,50),r=[l];function o(p,c,h,d,u,m){return t(),e("div",null,r)}const f=a(i,[["render",o]]);export{b as __pageData,f as default};
